{"version":3,"file":"767.js","mappings":"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","names":["UsersDataVo","constructor","init","Object","assign","this","i0","util","Util","TableComponentComponent","privilegiosService","EventEmitter","Set","ngDoCheck","setDataForPerfiles","valueParam","console","log","data","listData","header","listaData","config","idFieldReference","headerGrid","order","returnedArr","x","length","y","i","Array","j","table","xx","yy","returned","cuadrada","setDataUsers","tamnaio","myKeys","listUsers","keys","arrObj","obj","defineObject","usersVo","Reflect","set","push","showData","arrKeysObj","row_headers","getDataByKey","fila","llave","setData","nuevoArr","mySet1","add","getData","evaluateTitle","_param","toLowerCase","includes","ngOnChanges","changes","copiaFilas","filas","generateObjectGeneric","ArrayKeys","forEach","has","ngOnInit","getPrivilegios","subscribe","arrPrivilegios","setPrivilegios","tableFor","configSolicitudesGrid","setTimeout","getAllPrivilegiosArr","temp","Privilegios","searchTree","getIcons","children","configUsersGrid","tree","filter","menuP","parentprivilegio","status","descripcion","temporal","subMenus","setIcons","link","arrayIcons","element","matchingTitle","result","destructurinData","arr","value","values","param","create","entries","key","getKeys","_array","arrKeysObject","th_rows","_keys","normalObj","defineProperty","configurable","enumerable","writable","capitalizeFirstLetter","transformString","charAt","toUpperCase","slice","doubleClick","e","emitData","emit","checkUncheckAll","isSelected","masterSelected","getCheckedItemList","isAllSelected","every","item","checkedList","emitArrayData","JSON","stringify","iconData","event","emitEventData","selectors","ctx"],"sourceRoot":"webpack:///","sources":["./src/app/models/confTable.ts","./src/app/share-modules/table-component/table-component.component.html","./src/app/share-modules/table-component/table-component.component.ts"],"sourcesContent":["\r\nexport class UsersDataVo {\r\n\r\n    id:number;\r\n    status:number;\r\n    password:string;\r\n    estatus:number;\r\n    usuario:string;\r\n    nombre:string;\r\n    apellidoPaterno:string;\r\n    apellidoMaterno:string;\r\n    correo:string;\r\n    ultimoAccesoAlsistema:string;\r\n    ultimaModificaciondePass:string;\r\n    constructor(init?: Partial<UsersDataVo>) {\r\n        Object.assign(this, init);\r\n     }\r\n}\r\n\r\nexport class ConfHeader{\r\n    list:Array<string> = []\r\n\r\n    constructor(init?: Partial<ConfHeader>) {\r\n        Object.assign(this, init);\r\n     }\r\n\r\n}\r\n\r\nexport class ConfigTable{\r\n     idFieldReference :number;\r\n     headerGrid :  string;\r\n     dataType : string;\r\n     order : number;\r\n     constructor(init?: Partial<ConfigTable>) {\r\n        Object.assign(this, init);\r\n     }\r\n}\r\n\r\nexport class ConfigurationUsers{\r\n    listUsers :Array<UsersDataVo>= []\r\n    config:Array<ConfigTable> = [];\r\n\r\n    constructor(init?: Partial<ConfigurationUsers>) {\r\n        Object.assign(this, init);\r\n     }\r\n}\r\n","<div class=\"table-responsive\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\"></div>\r\n                    <div class=\"col-md-10\">\r\n                        <ng-container *ngFor=\"let icon of this.getIcons\">\r\n                            <a>\r\n                                <i class=\"icon {{icon.link}}\" id=\"\" style=\"margin: 4px;\" matTooltip=\"{{icon.etiqueta}}\" (click)=\"iconData(icon)\"></i>\r\n                            </a>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <table class=\"table table-bordered table-striped table-sm\">\r\n\r\n        <thead>\r\n            <!-- <tr>\r\n                <th><input type=\"checkbox\" [(ngModel)]=\"masterSelected\" name=\"list_name\" id=\"master_1\" (change)=\"checkUncheckAll()\"></th>\r\n                <ng-container *ngFor=\"let th of th_rows\">\r\n                    <th *ngIf=\"!evaluateTitle(th)\">{{capitalizeFirstLetter(th)}}</th>\r\n                </ng-container>\r\n            </tr> -->\r\n\r\n            <tr>\r\n                <th><input type=\"checkbox\" [(ngModel)]=\"masterSelected\" name=\"list_name\" id=\"master_1\" (change)=\"checkUncheckAll()\"></th>\r\n                <ng-container *ngFor=\"let th of row_headers;let i = index\">\r\n                    <th *ngIf=\"!evaluateTitle(th.headerGrid)\">{{capitalizeFirstLetter(th.headerGrid)}}</th>\r\n                </ng-container>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let fila of getData | paginate: { itemsPerPage: paginado, currentPage: p }\">\r\n                <td><input #checkBox type=\"checkbox\" [(ngModel)]=\"fila.isSelected\" name=\"list_name\" value=\"{{fila.id}}\" (change)=\"isAllSelected()\"></td>\r\n                <ng-container *ngFor=\"let x of arrKeysObj\">\r\n                    <td (dblclick)=\"doubleClick(fila)\" *ngIf=\"x != 'id' && x != 'isSelected'\">{{getDataByKey(fila,x)}}</td>\r\n                </ng-container>\r\n            </tr>\r\n        </tbody>\r\n\r\n        <!-- <tbody>\r\n            <tr *ngFor=\"let fila of this.cuadrada[0] | paginate: { itemsPerPage: paginado, currentPage: p }\">\r\n                <td><input #checkBox type=\"checkbox\" [(ngModel)]=\"fila.isSelected\" name=\"list_name\" value=\"{{fila.id}}\" (change)=\"isAllSelected()\"></td>\r\n                <ng-container *ngFor=\"let x of fila\">\r\n                    <td (dblclick)=\"doubleClick(fila)\" *ngIf=\"x != 'id' && x != 'isSelected'\">{{getDataByKey(fila,x)}}</td>\r\n                </ng-container>\r\n            </tr>\r\n        </tbody> -->\r\n\r\n\r\n\r\n\r\n    </table>\r\n    <div class=\"pagination\">\r\n        <pagination-controls (pageChange)=\"p = $event\" previousLabel=\"Previo\" nextLabel=\"Siguiente\"></pagination-controls>\r\n    </div>\r\n    <!-- <div class=\"row justify-content-end flex-box\">\r\n        <pagination-controls id={{idPage}} previousLabel=\"Previous\" nextLabel=\"Next\" class=\"mb-2 mt-5 justify-content-end pagination-table\" #pagination (pageChange)=\"getPage($event)\">\r\n        </pagination-controls>\r\n    </div> -->\r\n</div>","import { Component, Input, OnInit, OnChanges, SimpleChanges, DoCheck, Output, EventEmitter, ViewChildren, ElementRef, QueryList } from '@angular/core';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { Privilegios } from 'src/app/models/login';\r\nimport { Util } from '../../utilities/util';\r\nimport { PrivilegiosServiceService } from 'src/app/service/privilegios-service.service';\r\nimport { merge } from 'rxjs';\r\nimport { Data, Router, RouterModule } from '@angular/router';\r\nimport { ConfigTable, UsersDataVo } from 'src/app/models/confTable';\r\nimport { ConfigurationUsers } from '../../models/confTable';\r\n\r\nconst  util = new Util();\r\n@Component({\r\n  selector: 'app-table-component',\r\n  templateUrl: './table-component.component.html',\r\n  styleUrls: ['./table-component.component.css']\r\n})\r\nexport class TableComponentComponent implements OnInit, OnChanges, DoCheck {\r\n  p: number = 1;\r\n  arrPrivilegios :Array<Privilegios>;\r\n  arrayIcons:Array<string>=[];\r\n  getIcons = [];\r\n  masterSelected = false;\r\n  checkedList:any;\r\n  @Input()\r\n  url:any;\r\n\r\n  @Input()\r\n  paginado = 10;\r\n  //\r\n  @Input()\r\n  tableFor:string;  \r\n\r\n  @Input()\r\n  th_rows: Array<string> = [];\r\n\r\n  @Input()\r\n  filas: Array<any> = [];\r\n\r\n  @Input()\r\n  columnas: Array<string> = [];\r\n  private arrKeysObject:Array<any>=[];\r\n\r\n  @Output() \r\n  emitData = new EventEmitter<any>();\r\n\r\n  @Output() \r\n  emitArrayData = new EventEmitter<any>();\r\n\r\n  @Output() \r\n  emitEventData = new EventEmitter<any>();\r\n  \r\n  copiaFilas : Array<any> = [];\r\n  // public showRows = \r\n  ArrayKeys: Array<any> = [];\r\n  data = [];\r\n  row_headers:Array<ConfigTable> = []\r\n  @ViewChildren('checkBox') \r\n  viewChildren: QueryList<ElementRef>;\r\n\r\n  setCheckBox = new Set<any>();\r\n  arrKeysObj: Array<string>=[];\r\n\r\n  constructor(private privilegiosService : PrivilegiosServiceService) { }\r\n  \r\n  private showData;\r\n  \r\n  ngDoCheck(): void {\r\n\r\n    // throw new Error('Method not implemented.');\r\n  }\r\n  cuadrada:any;\r\n  @Input()\r\n  set setDataForPerfiles(valueParam:any){\r\n    console.log(\"........................................................\");\r\n    \r\n    let data = {\r\n      listData: [\r\n        {\r\n          \"header\": \"IDPEFIL\",\r\n          \"listaData\": [\r\n            \"144\",\r\n            \"300\",\r\n            \"400\"\r\n          ]\r\n        },\r\n        {\r\n          \"header\": \"PERFIL\",\r\n          \"listaData\": [\r\n            \"Administrador\",\r\n            \"Coordinador\",\r\n            \"Ejecutivo de Oficina de Proyectos\"\r\n          ]\r\n        },\r\n        {\r\n          \"header\": \"ESTATUS\",\r\n          \"listaData\": [\r\n            \"1\",\r\n            \"1\",\r\n            \"1\"\r\n          ]\r\n        }\r\n      ],\r\n      \"config\": [\r\n        {\r\n          \"idFieldReference\": 10,\r\n          \"headerGrid\": \"IDPEFIL\",\r\n          \"order\": 1\r\n        },\r\n        {\r\n          \"idFieldReference\": 11,\r\n          \"headerGrid\": \"PERFIL\",\r\n          \"order\": 2\r\n        },\r\n        {\r\n          \"idFieldReference\": 12,\r\n          \"headerGrid\": \"ESTATUS\",\r\n          \"order\": 3\r\n        }\r\n      ]\r\n    }\r\n    let arr = data.listData;\r\n    let returnedArr = []\r\n    let x = data.listData.length;\r\n    let y = data.listData[0].listaData.length\r\n    for(let i = 0; i < x; i++){\r\n      returnedArr[i] = new Array();\r\n      for(let j = 0; j < y; j++){        \r\n      returnedArr[i][j] = data.listData[i].listaData[j];\r\n      }\r\n    }\r\n    console.table(returnedArr)\r\n    let xx = returnedArr.length\r\n    let yy = returnedArr[0].length\r\n    let returned = []\r\n    for(let i = 0; i < xx; i++){\r\n      returned[i] = new Array();\r\n      for(let j = 0; j < yy; j++){        \r\n        returned[i][j] = returnedArr[j][i];\r\n      }\r\n    }\r\n    this.cuadrada = returned;\r\n    console.table(returned)\r\n    console.table(this.cuadrada)\r\n\r\n\r\n  }\r\n\r\n  @Input() set setDataUsers(valueParam:ConfigurationUsers){\r\n    console.log(valueParam);\r\n\r\n    let tamnaio = 0;\r\n    let myKeys = [];\r\n    for(let i = 0;i < valueParam.listUsers.length; i++){\r\n      if(Object.keys(valueParam.listUsers[i]).length >= tamnaio){\r\n        myKeys.length = 0\r\n        tamnaio = Object.keys(valueParam.listUsers[i]).length;\r\n        myKeys = Object.keys(valueParam.listUsers[i])\r\n      }\r\n    }\r\n    console.table(myKeys);\r\n    \r\n    let arrObj = []\r\n    arrObj.length = 0\r\n    for(let i = 0; i < valueParam.listUsers.length; i++){\r\n      let obj = this.defineObject(myKeys)\r\n      if(typeof valueParam.listUsers[i] === 'object'){\r\n        let usersVo = new UsersDataVo(valueParam.listUsers[i]);\r\n        for(let j = 0 ; j < myKeys.length; j++){\r\n          if(usersVo[myKeys[j]] == undefined){ \r\n            obj[myKeys[j]] = null;\r\n          }else{\r\n            obj[myKeys[j]] = usersVo[myKeys[j]]\r\n          }\r\n        }\r\n        Reflect.set(obj, 'isSelected', false);\r\n        arrObj.push(obj)\r\n      }\r\n    }\r\n\r\n    this.showData = arrObj;\r\n    console.table(this.showData)\r\n\r\n    this.arrKeysObj.length = 0\r\n    for (let header of valueParam.config) {\r\n      this.row_headers.push(header);\r\n      switch (header.idFieldReference) {\r\n        case 9:\r\n          // code block\r\n          this.arrKeysObj.push('id')\r\n          break;\r\n        case 1:\r\n          // code block\r\n          this.arrKeysObj.push('status')\r\n          break;\r\n        case 2:\r\n          // code block\r\n          this.arrKeysObj.push('usuario')\r\n          break;\r\n        case 3:\r\n          // code block\r\n          this.arrKeysObj.push('nombre')\r\n          break;\r\n        case 4:\r\n          // code block\r\n          this.arrKeysObj.push('apellido')\r\n          break;\r\n        case 5:\r\n          // code block\r\n          this.arrKeysObj.push('materno')\r\n          break;\r\n        case 6:\r\n          // code block\r\n          this.arrKeysObj.push('correo')\r\n          break;\r\n        case 7:\r\n          // code block\r\n          this.arrKeysObj.push('ultimoAccesoAlsistema')\r\n          break;\r\n        case 8:\r\n          // code block\r\n          this.arrKeysObj.push('ultimoAccesoAlsistema')\r\n          break;\r\n        default:\r\n        // code block\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getDataByKey(fila, llave){\r\n    return fila[llave];\r\n  }\r\n\r\n\r\n\r\n  @Input() set setData(valueParam:Array<any>){\r\n    let tamnaio = 0;\r\n    let nuevoArr = []\r\n    nuevoArr.length = 0\r\n    let myKeys = [];\r\n    const mySet1 = new Set();\r\n    for(let i = 0;i<valueParam.length;i++){\r\n      if(Object.keys(valueParam[i]).length >= tamnaio){\r\n        myKeys.length = 0\r\n        tamnaio = Object.keys(valueParam[i]).length;\r\n        myKeys = Object.keys(valueParam[i])\r\n      }\r\n    }\r\n    \r\n    for(let i = 0; i < valueParam.length; i++){\r\n      let obj = this.defineObject(myKeys)\r\n      if(typeof valueParam[i] === 'object'){\r\n        for(let j = 0 ; j < myKeys.length; j++){\r\n          if(valueParam[i][myKeys[j]] == undefined){\r\n            obj[myKeys[j]] = null;  \r\n          }else{\r\n            obj[myKeys[j]] = valueParam[i][myKeys[j]]\r\n          }\r\n        }\r\n        Reflect.set(obj, 'isSelected', false);\r\n        nuevoArr.push(obj)\r\n        mySet1.add(obj)\r\n      }\r\n    }\r\n    // console.table(nuevoArr);\r\n    \r\n    this.showData = nuevoArr;\r\n  }\r\n  get getData(){\r\n    return this.showData;\r\n  }\r\n\r\n  evaluateTitle(_param:string){\r\n    return _param.toLowerCase().includes('iduser') ? true : false;\r\n  }\r\n  \r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['filas']){\r\n\r\n    }\r\n    this.copiaFilas = [...this.filas]\r\n    this.generateObjectGeneric()\r\n  }\r\n\r\n  generateObjectGeneric(){\r\n    \r\n    let tamnaio = 0;\r\n    for(let i = 0;i<this.copiaFilas.length;i++){\r\n      if(Object.keys(this.copiaFilas[i]).length >= tamnaio){\r\n        this.ArrayKeys.length = 0\r\n        tamnaio = Object.keys(this.copiaFilas[i]).length;\r\n        this.ArrayKeys = Object.keys(this.copiaFilas[i])\r\n      }\r\n    }\r\n\r\n    this.ArrayKeys.forEach((llave) =>{\r\n      for(let i = 0; i < this.copiaFilas.length; i++){\r\n        if(typeof this.copiaFilas[i] === 'object'){\r\n          this.copiaFilas[i] = Reflect.set(this.copiaFilas[i], 'isSelect', true);\r\n          if(Reflect.has(this.copiaFilas[i], llave) != true){\r\n            this.copiaFilas[i] = Reflect.set(this.copiaFilas[i], llave, \"N/A\")\r\n            console.log(this.copiaFilas);\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.privilegiosService.getPrivilegios().subscribe((data)=>{\r\n      this.arrPrivilegios = data;\r\n    });\r\n    this.privilegiosService.setPrivilegios();\r\n    if(this.tableFor == \"users\"){\r\n      // this.configUsersGrid();\r\n    } else if (this.tableFor == \"solicitudes\"){\r\n      this.configSolicitudesGrid();\r\n    }\r\n\r\n    setTimeout(()=>{\r\n      console.log(this.privilegiosService.getAllPrivilegiosArr())\r\n      let temp =[...this.privilegiosService.getAllPrivilegiosArr()]\r\n      let privilegioGeneral = new Privilegios(this.privilegiosService.searchTree(temp[1], 109))\r\n      this.getIcons =  new Privilegios(this.privilegiosService.searchTree(temp[1], 102)).children\r\n    },5000)\r\n  }\r\n\r\n  configUsersGrid(){ \r\n    util.tree(this.arrPrivilegios,0)\r\n    this.arrPrivilegios.filter((menuP)=>{\r\n      return menuP.parentprivilegio == 0 && menuP.status == 1 && menuP.descripcion.includes('Menu principal')\r\n    })\r\n    let temporal = util.tree(this.arrPrivilegios,0)\r\n    let subMenus = this.searchTree(temporal, \"Usuarios\");\r\n    this.setIcons(subMenus.children)\r\n\r\n    setTimeout(()=>{\r\n      let temp = this.privilegiosService.getAllPrivilegiosArr();      \r\n      console.log(temp);\r\n      this.getIcons =  new Privilegios(this.privilegiosService.searchTree(temp[1], 102)).children\r\n      console.log(this.getIcons);\r\n      \r\n    },5000)\r\n  }\r\n\r\n  configSolicitudesGrid(){  \r\n    util.tree(this.arrPrivilegios,0)\r\n    this.arrPrivilegios.filter((menuP)=>{\r\n      // console.log(menuP);\r\n      \r\n      return menuP.parentprivilegio == 0 && menuP.status == 1 && menuP.descripcion.includes('Solicitudes')\r\n    })\r\n    let temporal = util.tree(this.arrPrivilegios,0)\r\n    let subMenus = this.searchTree(temporal, \"Solicitudes\");\r\n    this.setIcons(subMenus.children)\r\n\r\n    setTimeout(()=>{\r\n      let temp = this.privilegiosService.getAllPrivilegiosArr();      \r\n      // console.log(temp);\r\n      this.getIcons =  new Privilegios(this.privilegiosService.searchTree(temp[1], 254)).children\r\n      // console.log(this.getIcons);\r\n      \r\n    },5000)\r\n  }\r\n\r\n  setIcons(subMenus:Array<any>){\r\n    subMenus.forEach((data)=> {\r\n      if(data.link.includes(\"fa\") && data.status == 1){\r\n        this.arrayIcons.push(data.link)\r\n      }\r\n    })\r\n  }\r\n\r\n  searchTree(element, matchingTitle) {\r\n    if (element.descripcion == matchingTitle) {\r\n      return element;\r\n    } else if (element.children != null) {\r\n      let i;\r\n      let result = null;\r\n      for (i = 0; result == null && i < element.children.length; i++) {\r\n        result = this.searchTree(element.children[i], matchingTitle);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  destructurinData(_param):Array<any>{\r\n    let arr = [];\r\n    for (let value of Object.values(_param)) {\r\n      arr.push(value);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  keys(param){\r\n    let arr = [];\r\n    const me = Object.create(param);\r\n    let entriesData = Object.entries(param);\r\n    for (let [key, value] of Object.entries(param)) {\r\n      arr.push(key);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  /*\r\n    configuracion de tabla\r\n  */\r\n  getKeys(_array:Array<any>){\r\n    this.arrKeysObject.length = 0;\r\n    for(let element of _array){\r\n      if(this.th_rows.length == Object.keys(element).length )\r\n        this.arrKeysObject = Object.keys(element)    \r\n      break;  \r\n      } \r\n  }\r\n\r\n\r\n  defineObject(_keys: Array<string>) {\r\n    let normalObj = Object.create(null)\r\n    _keys.forEach((element) => {\r\n      Object.defineProperty(normalObj, element, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: null\r\n      })\r\n    })\r\n    return normalObj;\r\n  }\r\n\r\n  capitalizeFirstLetter(_param:string) {\r\n    let transformString = _param.toLowerCase()\r\n    return transformString.charAt(0).toUpperCase() + transformString.slice(1);\r\n  }\r\n\r\n  doubleClick(e:any){\r\n    this.emitData.emit(e);\r\n  }\r\n\r\n  /*\r\n    selected and unselected\r\n  */\r\n  checkUncheckAll() {\r\n    for (let i = 0; i < this.showData.length; i++) {\r\n      this.showData[i].isSelected = this.masterSelected;\r\n    }\r\n    this.getCheckedItemList();\r\n  }\r\n\r\n  // Check All Checkbox Checked\r\n  isAllSelected() {\r\n    this.masterSelected = this.showData.every(function(item:any) {\r\n        return item.isSelected == true;\r\n      })\r\n    this.getCheckedItemList();\r\n  }\r\n\r\n  // Get List of Checked Items\r\n  getCheckedItemList(){\r\n    this.checkedList = [];\r\n    for (let i = 0; i < this.showData.length; i++) {\r\n      if( this.showData[i].isSelected)\r\n        this.checkedList.push(this.showData[i]);\r\n    }\r\n    this.emitArrayData.emit(this.checkedList);\r\n    this.checkedList = JSON.stringify(this.checkedList);\r\n\r\n    // console.log(this.checkedList);\r\n    \r\n  }\r\n\r\n  iconData(event){\r\n    this.emitEventData.emit(event)\r\n  }\r\n\r\n}\r\n\r\n"],"x_google_ignoreList":[]}