{"version":3,"file":"932.js","mappings":"oNAMA,MAAMA,EAAiB,CACrB,CACEC,KAAM,WACNC,YAAY,CAACC,IAAgBC,KAC7BC,KAAK,CACHC,WAAW,WACXC,WAAW,MACXC,MAAO,CACLC,WACAA,iBACAA,2BAGJC,aAAe,IAAMC,wEAClBC,KAAKC,GAAKA,EAAEC,iBACf,CACAb,KAAM,WACNC,YAAY,CAACC,IAAgBC,KAC7BC,KAAK,CACHC,WAAW,WACXC,WAAW,MACXC,MAAO,CACLC,WACAA,iBACAA,2BAGJC,aAAe,IAAMC,qDAClBC,KAAKC,GAAKA,EAAEE,kBAQZ,IAAMC,EAAb,MAAM,MAAOA,kDAAiC,0BAAjCA,gCAHDC,cAAsBjB,GACtBiB,QAECD,CAAb,KC7BaE,EAAb,MAAM,MAAOA,kDAA0B,0BAA1BA,gCAJTC,KACAH,KAGSE,CAAb,kFCJO,IAAMd,EAAb,MAAM,MAAOA,EAGXgB,YAAoBC,EAAwBC,GAAxBC,cAAwBA,0BAF5CA,UAAsB,EAIrB,CAEDrB,YACEsB,EACAC,GAEF,IAAIC,EAAY,IAAIf,QAAiB,CAACgB,EAASC,KAC7CC,WAAW,KACTC,QAAQC,IAAIR,KAAKD,mBAAmBU,wBACpCT,KAAKU,KAAM,IAAIV,KAAKD,mBAAmBU,wBACvC,IAAIE,EAAc,IAAIC,KAAYZ,KAAKD,mBAAmBc,WAAWb,KAAKU,KAAK,GAAKT,EAAMnB,KAAKE,aAAa8B,QAAU,IAClHC,EAAgB,IAAIH,KAAYZ,KAAKD,mBAAmBc,WAAWb,KAAKU,KAAK,GAAIT,EAAMnB,KAAKE,aAAa8B,QAAW,IACxHP,QAAQC,IAAIP,EAAMnB,KAAKE,YACvBuB,QAAQC,IAAIG,GAClBJ,QAAQC,IAAIO,GAEY,GAAfJ,GAAqC,GAAjBI,EACrBX,GAAQ,GAERC,GAAO,EAAD,EAEP,IAdO,GAwBV,OAPaF,EAAUd,KAAM2B,IACpB,EACPC,IACO,GAIFd,EAAUd,KAAM2B,IACrBT,QAAQC,IAAI,4CAEL,GACPS,IACAV,QAAQC,IAAI,2CAEZR,KAAKF,OAAOoB,SAAS,CAAC,OACf,GAEV,+CA9CUrC,GAAoBsC,mDAApBtC,EAAoBuC,QAApBvC,EAAoB,qBAFnB,SAEDA,CAAb","names":["routes","path","canActivate","AuthGuardGuard","PrivilegioGuardGuard","data","breadcrumb","privilegio","roles","RoleBaseAuthorization","loadChildren","Promise","then","m","UsuariosModule","PerfilesModule","AdministracionModuleRoutingModule","RouterModule","AdministracionModuleModule","CommonModule","constructor","router","privilegiosService","this","route","state","myPromise","resolve","reject","setTimeout","console","log","getAllPrivilegiosArr","temp","menuUsuario","Privilegios","searchTree","status","menuPrincipal","value","erro","navigate","i0","factory"],"sourceRoot":"webpack:///","sources":["./src/app/modules/administracion-module/administracion-module-routing.module.ts","./src/app/modules/administracion-module/administracion-module.module.ts","./src/app/utilities/privilegio-guard.guard.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuardGuard } from 'src/app/utilities/auth-guard.guard';\r\nimport { RoleBaseAuthorization } from 'src/app/models/login';\r\nimport { PrivilegioGuardGuard } from '../../utilities/privilegio-guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'usuarios',\r\n    canActivate:[AuthGuardGuard, PrivilegioGuardGuard],\r\n    data:{ \r\n      breadcrumb:'Usuarios',\r\n      privilegio:\"102\",\r\n      roles: [\r\n        RoleBaseAuthorization.ADMIN,\r\n        RoleBaseAuthorization.COORDINADOR,\r\n        RoleBaseAuthorization.EJECUTIVO_PROYECTOS,\r\n      ]\r\n    },\r\n    loadChildren : () => import(\"../usuarios/usuarios.module\")\r\n      .then(m => m.UsuariosModule)\r\n  },{\r\n    path: 'perfiles',\r\n    canActivate:[AuthGuardGuard, PrivilegioGuardGuard],\r\n    data:{ \r\n      breadcrumb:'perfiles',\r\n      privilegio:\"264\",\r\n      roles: [\r\n        RoleBaseAuthorization.ADMIN,\r\n        RoleBaseAuthorization.COORDINADOR,\r\n        RoleBaseAuthorization.EJECUTIVO_PROYECTOS,\r\n      ]\r\n    },\r\n    loadChildren : () => import(\"../perfiles/perfiles.module\")\r\n      .then(m => m.PerfilesModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdministracionModuleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdministracionModuleRoutingModule } from './administracion-module-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AdministracionModuleRoutingModule\r\n  ]\r\n})\r\nexport class AdministracionModuleModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Privilegios } from 'src/app/models/login';\r\nimport { PrivilegiosServiceService } from 'src/app/service/privilegios-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrivilegioGuardGuard implements CanActivate {\r\n  temp: Privilegios[] = [];\r\n\r\n  constructor(private router: Router, private privilegiosService : PrivilegiosServiceService){\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n  let myPromise = new Promise<boolean>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      console.log(this.privilegiosService.getAllPrivilegiosArr())\r\n      this.temp =[...this.privilegiosService.getAllPrivilegiosArr()]\r\n      let menuUsuario = new Privilegios(this.privilegiosService.searchTree(this.temp[1],  route.data.privilegio)).status ?? 185 \r\n      let menuPrincipal = new Privilegios(this.privilegiosService.searchTree(this.temp[0], route.data.privilegio)).status  ?? 185\r\n      console.log(route.data.privilegio);\r\n      console.log(menuUsuario);\r\nconsole.log(menuPrincipal);\r\n\r\n      if(menuUsuario == 1 || menuPrincipal == 1){\r\n        resolve(true);\r\n      }else{\r\n        reject(false)\r\n      }\r\n    }, 3000);\r\n  });\r\n\r\n    let valiue = myPromise.then((value)=> {\r\n      return true\r\n    },erro =>{\r\n      return false;\r\n    });\r\n    // console.table(valiue);\r\n    \r\n    return myPromise.then((value)=> {\r\n      console.log('.......................................');\r\n      \r\n      return true\r\n    },erro =>{\r\n      console.log('.......................................');\r\n\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    });\r\n  }\r\n  \r\n}\r\n"],"x_google_ignoreList":[]}