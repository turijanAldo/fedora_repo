{"version":3,"file":"369.js","mappings":"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","names":["i0","routes","path","redirectTo","pathMatch","component","SolicitudesComponent","constructor","route","this","ngOnInit","getDataForList","$event","getCheckBoxData","getEventIcon","evento","descripcion","navigate","goPrueba","getValuesFilter","selectors","ctx","canActivate","AuthGuardGuard","data","breadcrumb","roles","RoleBaseAuthorization","TemplateSolicitudesComponent","_formSolicitud","group","folio","FormControl","Validators","alias","forma","estatus","version","asignado","comentarios","getFormControl","controlName","formularioSolicitudes","controls","ProyectosRoutingModule","RouterModule","ProyectosModule","CommonModule","FormsModule","ReactiveFormsModule","ShareModule","AppRoutingModule","AngularDualListBoxModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/proyectos/template-solicitudes/template-solicitudes.component.html","./src/app/modules/proyectos/proyectos-routing.module.ts","./src/app/modules/proyectos/solicitudes/solicitudes.component.ts","./src/app/modules/proyectos/solicitudes/solicitudes.component.html","./src/app/modules/proyectos/template-solicitudes/template-solicitudes.component.ts","./src/app/modules/proyectos/proyectos.module.ts"],"sourcesContent":["<section>\r\n    <div class=\"accordion\" id=\"accordionSolicitudes\">\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingUno\">\r\n                <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseUno\" aria-expanded=\"false\" aria-controls=\"collapseUno\">\r\n                    Generales del documento de solicitud\r\n                </button>\r\n            </h2>\r\n            <div class=\"space\"></div>\r\n            <div id=\"collapseUno\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingUno\" data-bs-parent=\"#accordionSolicitudes\">\r\n                <form [formGroup]=\"formularioSolicitudes\">\r\n                    <div class=\"accordion-body\">\r\n                        <div class=\"panel\">\r\n                            <!-- Folio -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Folio:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div class=\"\">\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Folio\" formControlName=\"folio\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('folio').touched || \r\n                                                                    getFormControl('folio').dirty) && \r\n                                                                    getFormControl('folio').invalid}\">\r\n                                    </div>\r\n                                    <div class=\"text-danger\" *ngIf=\"(getFormControl('folio').touched || \r\n                                                 getFormControl('folio').dirty) && \r\n                                                 getFormControl('folio').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Alias -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Alias:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Alias\" formControlName=\"alias\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('alias').touched ||  \r\n                                                                    getFormControl('alias').dirty) && \r\n                                                                    getFormControl('alias').invalid}\">\r\n                                    </div>\r\n                                    <div class=\"text-danger\" *ngIf=\"(getFormControl('alias').touched ||  \r\n                                                getFormControl('alias').dirty) && \r\n                                                getFormControl('alias').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Forma -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Forma:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Forma\" formControlName=\"forma\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('forma').touched ||  \r\n                                                                    getFormControl('forma').dirty) && \r\n                                                                    getFormControl('forma').invalid}\">\r\n                                    </div>\r\n                                    <div class=\"text-danger\" *ngIf=\"(getFormControl('forma').touched ||  \r\n                                                getFormControl('forma').dirty) && \r\n                                                getFormControl('forma').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Estatus -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Estatus:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Estatus\" formControlName=\"estatus\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('estatus').touched ||  \r\n                                                                    getFormControl('estatus').dirty) && \r\n                                                                    getFormControl('estatus').invalid}\">\r\n                                    </div>\r\n                                    <div class=\"text-danger\" *ngIf=\"(getFormControl('estatus').touched ||  \r\n                                                getFormControl('estatus').dirty) && \r\n                                                getFormControl('estatus').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Versión -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Versión:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Version\" formControlName=\"version\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('version').touched ||  \r\n                                                                    getFormControl('version').dirty) && \r\n                                                                    getFormControl('version').invalid}\">\r\n                                    </div>\r\n                                    <div  class=\"text-danger\" *ngIf=\"(getFormControl('version').touched ||  \r\n                                                getFormControl('version').dirty) && \r\n                                                getFormControl('version').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Asignado a -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Asignado a:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"Asignado\" formControlName=\"asignado\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('asignado').touched || \r\n                                                                    getFormControl('asignado').dirty) && \r\n                                                                    getFormControl('asignado').invalid}\">\r\n                                    </div>\r\n                                    <div class=\"text-danger\" *ngIf=\"(getFormControl('asignado').touched ||  \r\n                                                getFormControl('asignado').dirty) && \r\n                                                getFormControl('asignado').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Comentarios -->\r\n                            <div class=\"mb-3 row\">\r\n                                <label class=\"col-sm-2 col-form-label\">Comentarios:</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <div>\r\n                                        <textarea class=\"form-control\" name=\"\" id=\"Comentarios\" cols=\"30\" rows=\"5\" formControlName=\"comentarios\" \r\n                                        [ngClass]=\"{ 'is-invalid': (getFormControl('comentarios').touched ||  \r\n                                                                    getFormControl('comentarios').dirty) && \r\n                                                                    getFormControl('comentarios').invalid}\">\r\n                                        </textarea>\r\n                                    </div>\r\n                                    <div  class=\"text-danger\" *ngIf=\"(getFormControl('comentarios').touched ||  \r\n                                                getFormControl('comentarios').dirty) && \r\n                                                getFormControl('comentarios').invalid\">\r\n                                        <div><small>*Campo requerido</small></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- botones -->\r\n                            <div class=\"mb-3 row\">\r\n                                <div class=\"col-sm-10 m-2\">\r\n                                    <button class=\"btn btn-primary\">Guardar</button>\r\n                                    <button class=\"btn btn-primary\">Solicitar Aprobación</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"accordion\" id=\"accordionForma\">\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingDos\">\r\n                <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDos\" aria-expanded=\"false\" aria-controls=\"collapseDos\">\r\n                    Datos de la forma\r\n                </button>\r\n            </h2>\r\n            <div class=\"space\"></div>\r\n            <div id=\"collapseDos\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingDos\" data-bs-parent=\"#accordionForma\">\r\n                <!-- botones -->\r\n                <div class=\"mb-3 row\">\r\n                    <div class=\"col-sm-10 m-2\">\r\n                        <button class=\"btn btn-primary\">Guardar</button>\r\n                        <button class=\"btn btn-primary\">Solicitar Aprobación</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"accordion\" id=\"accordionReferencia\">\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingTres\">\r\n                <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTres\" aria-expanded=\"false\" aria-controls=\"collapseTres\">\r\n                    Referencia del documento de solicitud\r\n                </button>\r\n            </h2>\r\n            <div class=\"space\"></div>\r\n            <div id=\"collapseTres\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingTres\" data-bs-parent=\"#accordionReferencia\">\r\n    \r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuardGuard } from 'src/app/utilities/auth-guard.guard';\r\nimport { RoleBaseAuthorization } from '../../models/login';\r\nimport { SolicitudesComponent } from './solicitudes/solicitudes.component';\r\nimport { TemplateSolicitudesComponent } from './template-solicitudes/template-solicitudes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', redirectTo:'solicitudes', pathMatch: 'full'\r\n  },{\r\n    path: 'solicitudes', \r\n    component: SolicitudesComponent,\r\n    canActivate:[AuthGuardGuard],\r\n    data:{ \r\n      breadcrumb:'Solicitudes', \r\n      roles:[ \r\n        RoleBaseAuthorization.ADMIN,\r\n        RoleBaseAuthorization.COORDINADOR\r\n      ]\r\n    }\r\n  },{\r\n    path: 'template-solicitudes', \r\n    component: TemplateSolicitudesComponent,\r\n    canActivate:[AuthGuardGuard],\r\n    data:{ \r\n      breadcrumb:'Crear solicitud', \r\n      roles:[ \r\n        RoleBaseAuthorization.ADMIN,\r\n        RoleBaseAuthorization.COORDINADOR\r\n      ]\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProyectosRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { filterObject } from 'src/app/models/filterObject';\r\n\r\n@Component({\r\n  selector: 'app-solicitudes',\r\n  templateUrl: './solicitudes.component.html',\r\n  styleUrls: ['./solicitudes.component.css']\r\n})\r\nexport class SolicitudesComponent implements OnInit {\r\n\r\n  idFilter: string =\"solicitudes\";\r\n  cabecera:Array<any>=[];\r\n  cabeceraFilter:Array<any>=[];\r\n  filas:Array<any>=[];\r\n  deleteReference :Array<string>=[]; \r\n  filterList: filterObject[] = [];\r\n  paginado = 10;\r\n  dataReference=[];\r\n\r\n  constructor(\r\n    private route:Router,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getDataForList($event){}\r\n  getCheckBoxData($event){}\r\n\r\n  getEventIcon($event){\r\n    let evento = $event;\r\n\r\n    if(evento.descripcion == \"Crear solicitud\"){\r\n      this.route.navigate([\"/home/proyectos/template-solicitudes\"]);\r\n    }\r\n  }\r\n\r\n  goPrueba(){\r\n    this.route.navigate([\"/home/proyectos/template-solicitudes\"]);\r\n  }\r\n\r\n  getValuesFilter($event){}\r\n}\r\n","<div class=\"accordion\" id=\"accordionSolicitudes\">\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingUno\">\r\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseUno\" aria-expanded=\"false\" aria-controls=\"collapseUno\">\r\n                Solicitudes\r\n            </button>\r\n        </h2>\r\n        <div class=\"space\"></div>\r\n        <div id=\"collapseUno\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingUno\" data-bs-parent=\"#accordionSolicitudes\">\r\n            <app-filter \r\n                [idFilter]=idFilter \r\n                [filter]=filterList \r\n                (getValues)=getValuesFilter($event)>\r\n            </app-filter>\r\n            <app-table-component \r\n                [tableFor]=\"'solicitudes'\" \r\n                [th_rows]=\"cabecera\" \r\n                [filas]=\"filas\"\r\n                [setData]='filas' \r\n                [paginado]=\"paginado\" \r\n                (emitData)=\"getDataForList($event)\" \r\n                (emitArrayData)=\"getCheckBoxData($event)\" \r\n                (emitEventData)=\"getEventIcon($event)\">\r\n            </app-table-component>\r\n        </div>\r\n        <!-- <div class=\"space\"></div> -->\r\n        <!-- <button [routerLink]=\"['/home']\">Prueba</button> -->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-template-solicitudes',\r\n  templateUrl: './template-solicitudes.component.html',\r\n  styleUrls: ['./template-solicitudes.component.css']\r\n})\r\nexport class TemplateSolicitudesComponent implements OnInit {\r\n\r\n  public formularioSolicitudes = this._formSolicitud.group({\r\n    folio: new FormControl('', Validators.required),\r\n    alias: new FormControl(),\r\n    forma: new FormControl('', Validators.required),\r\n    estatus: new FormControl('', Validators.required),\r\n    version: new FormControl('', Validators.required),\r\n    asignado: new FormControl(),\r\n    comentarios: new FormControl(),\r\n  });\r\n  \r\n  constructor(private _formSolicitud: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public getFormControl(controlName: string): AbstractControl {\r\n    return this.formularioSolicitudes.controls[controlName];\r\n  }\r\n  \r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SolicitudesComponent } from './solicitudes/solicitudes.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ProyectosRoutingModule } from './proyectos-routing.module';\r\nimport { ShareModule } from 'src/app/share-modules/share-modules.module';\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\nimport { AngularDualListBoxModule } from 'angular-dual-listbox';\r\nimport { TemplateSolicitudesComponent } from './template-solicitudes/template-solicitudes.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SolicitudesComponent,\r\n    TemplateSolicitudesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ProyectosRoutingModule,\r\n    ShareModule,\r\n    AppRoutingModule,\r\n    AngularDualListBoxModule  \r\n  ]\r\n})\r\nexport class ProyectosModule { }\r\n"],"x_google_ignoreList":[]}