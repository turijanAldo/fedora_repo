{"version":3,"file":"759.js","mappings":"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","names":["filterObject","constructor","this","pattern","filterObject2","init","Object","assign","UsuariosListComponent","userService","router","route","guardar","borrar","routeReuseStrategy","shouldReuseRoute","ngOnInit","getDataUsersByConf","subscribe","result","console","log","data","config","forEach","element","cabecera","push","headerGrid","setFilterConfig","sistema","password","filterList","setFilter","toLowerCase","id","label","placeholder","typeInput","list","listKey","icon","filterObj","type","deleteData","deleteReference","element2","split","deleteProperty","element3","deleteDataFilter","getValuesFilter","event","filters","Array","i","model","value","map","toString","replace","substring","length","json","JSON","parse","getDataFilter","filas","listUsersDto","isVisible","cabeceraFilter","property","Reflect","has","getDataForList","$_id","undefined","onSameUrlNavigation","navigateByUrl","getCheckBoxData","dataReference","viewUser","getEventIcon","idprivilegio","i0","selectors","ctx","UsuarioComponent","_formB","privilegiosService","group","idUser","FormControl","userName","name","firstLastName","secondLastName","email","estatus","lastLoginDate","nameButton","val","nameBtn","statusButton","user","userData","formularioGeneral","getFormularioGeneral","ngAfterViewInit","sessionUser","Validators","lastLogin","getFormControl","controlName","controls","valid","util","Util","msg","Messages","upDateData","response","bottomStartOk","MSG_EMERGENTE_TRANSACCION_OK","error","bottomEndError","RestablecerPassComponent","_userService","modificationDate","restablecer","nameButon","butonName","showBtn","formulario","get","valueChanges","putResetStatusPass","passModificationDate","statusPass","getNameButon","showButon","PerfilesComponent","loginService","ref","add","remove","all","none","direction","DualListComponent","draggable","locale","btnName","getBtName","nameComponent","forkJoin","getById","getPerfiles","roles","sourceStations","listRoles","confirmedStations","useStations","key","display","keepSorted","source","confirmed","temp","temp2","_$","EditRole","arr","boo","j","agregar","remover","putPerfiles","filterBtn","filter","doDisable","disabled","disableBtn","swapDirection","sourceLeft","format","VistaUsuarioComponent","params","referenceNumber","perfil","setTimeout","getAllPrivilegiosArr","privilegioGeneral","Privilegios","searchTree","status","etiqueta","infoHijos","restablecerPassComp","contrasenaComponent","butonContranseName","perfilesComp","showPefilesComponent","keys","nameBtnPerfil","UsuariosComponent","routes","path","component","children","canActivate","AuthGuardGuard","PrivilegioGuardGuard","breadcrumb","privilegio","RoleBaseAuthorization","UsuariosRoutingModule","RouterModule","UsuariosModule","CommonModule","FormsModule","HttpClientModule","ReactiveFormsModule","ShareModule","PerfilModule","AngularDualListBoxModule"],"sourceRoot":"webpack:///","sources":["./src/app/models/filterObject.ts","./src/app/modules/usuarios/usuarios/usuarios-list/usuarios-list.component.ts","./src/app/modules/usuarios/usuarios/usuarios-list/usuarios-list.component.html","./src/app/modules/usuarios/usuarios/usuario/usuario.component.html","./src/app/modules/usuarios/usuarios/usuario/usuario.component.ts","./src/app/modules/usuarios/usuarios/restablecer-pass/restablecer-pass.component.ts","./src/app/modules/usuarios/usuarios/restablecer-pass/restablecer-pass.component.html","./src/app/modules/usuarios/usuarios/perfiles/perfiles.component.html","./src/app/modules/usuarios/usuarios/perfiles/perfiles.component.ts","./src/app/modules/usuarios/usuarios/vista-usuario/vista-usuario.component.html","./src/app/modules/usuarios/usuarios/vista-usuario/vista-usuario.component.ts","./src/app/modules/usuarios/usuarios.component.ts","./src/app/modules/usuarios/usuarios.component.html","./src/app/modules/usuarios/usuarios-routing.module.ts","./src/app/modules/usuarios/usuarios.module.ts"],"sourcesContent":["\r\nexport class filterObject {\r\n\r\n  id:string ;\r\n  placeholder:string ;\r\n  label:string ;\r\n  type:string ;\r\n  list?:any[];\r\n  pattern?:any;\r\n  icon?:string;\r\n  listKey?:any;\r\n  constructor(){\r\n    this.pattern= '.*';\r\n  }\r\n\r\n}\r\n\r\nexport class filterObject2 {\r\n  id: string;\r\n  value: any;\r\n  isVisible: string;\r\n\r\n  \r\n  constructor(init?: Partial<filterObject2>) {\r\n    Object.assign(this, init);\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../../../../service/user.service';\r\nimport { filterObject, filterObject2 } from 'src/app/models/filterObject';\r\nimport { FilterComponent } from '../../../../share-modules/filter/filter.component';\r\nimport { FilterResponse } from '../../../../models/usuario';\r\nimport { AllEvaluation, TimePeriod } from '../../../../models/reports';\r\nimport { faBriefcaseClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { RoleBaseAuthorization, Privilegios } from '../../../../models/login';\r\nimport { filter } from 'rxjs/operators';\r\nimport { VistaUsuarioComponent } from '../vista-usuario/vista-usuario.component';\r\n\r\n@Component({\r\n  selector: 'app-usuarios-list',\r\n  templateUrl: './usuarios-list.component.html',\r\n  styleUrls: ['./usuarios-list.component.css']\r\n})\r\nexport class UsuariosListComponent implements OnInit {\r\n  cabecera:Array<any>=[];\r\n  cabeceraFilter:Array<any>=[];\r\n  filas:Array<any>=[];\r\n  deleteReference :Array<string>=[]; \r\n  idFilter :string='filtro_usuarios';\r\n  filterList: filterObject[] = [];\r\n  paginado = 10;\r\n  dataReference=[];\r\n  perfiles: RoleBaseAuthorization[]=[]\r\n  mask: String = \"\";\r\n  data: any;\r\n  constructor(private userService: UserService, private router: Router , private route: ActivatedRoute, ) { \r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\r\n      return false;\r\n    };\r\n  }\r\n  // save: FilterComponent\r\n  save: any = {\r\n    guardar: true,\r\n    borrar: false\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    // this.userService.getDataUsers().subscribe((result)=>{\r\n    //   this.filas = result['data']['listUsers']\r\n    //   result.data.config.forEach(element => { \r\n    //     if(element.isVisible == 1){\r\n    //     this.cabecera.push(element.headerGrid);        \r\n    //   }else\r\n    //     this.deleteReference.push(element.headerGrid);        \r\n    //   });\r\n    //   this.deleteData();\r\n    //   this.setFilterConfig();\r\n    //   this.paginado = result['data']['maxcount']\r\n    // })\r\n    this.userService.getDataUsersByConf(4).subscribe((result)=>{\r\n      console.log(result);\r\n      result.data.config.forEach((element) => {\r\n        this.cabecera.push(element.headerGrid);\r\n      });\r\n      this.data=result.data;\r\n    })\r\n\r\n  }\r\n\r\n  setFilterConfig() {\r\n    let sistema = this.cabecera[5];\r\n    let password = this.cabecera[6];\r\n    \r\n    this.cabecera.forEach(element => {\r\n      if(element != password && element != sistema){\r\n      this.filterList.push(this.setFilter(element,element, 'Ingrese'+' '+ element.toLowerCase(), 'text', null, null, ' ', ' '));\r\n      }else \r\n      this.filterList.push(this.setFilter(element,element, 'Ingrese'+' '+ element.toLowerCase(), 'date', null, null, ' ', ' '));\r\n    });\r\n  }\r\n\r\n  setFilter(id: any, label: any, placeholder: any, typeInput: any, list: any, listKey: any, icon: any, pattern: any): filterObject {\r\n    const filterObj: filterObject = new filterObject();\r\n    filterObj.id = id;\r\n    filterObj.label = label;\r\n    filterObj.placeholder = placeholder;\r\n    filterObj.type = typeInput;\r\n\r\n    return filterObj;\r\n  }\r\n  \r\n  deleteData(){\r\n    console.log(this.deleteReference);\r\n    \r\n    this.deleteReference.forEach(element => {\r\n      if(element == this.deleteReference[0]){\r\n        let element2 = element.split(' ')[1].toLowerCase();\r\n        this.deleteProperty(element2)\r\n      }else\r\n        if(element==this.deleteReference[1]){\r\n         var element3 = element.split(' ')[0].toLowerCase();\r\n         this.deleteProperty(element3)   \r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDataFilter(){\r\n    this.deleteReference.forEach(element => {\r\n      if(element == this.deleteReference[0]){\r\n        let element2 = element.split(' ')[1].toLowerCase();\r\n        this.deleteProperty(element2)\r\n      }else\r\n        if(element==this.deleteReference[1]){\r\n         var element3 = element.split(' ')[0].toLowerCase();\r\n         this.deleteProperty(element3)   \r\n      }\r\n    });\r\n  }\r\n\r\n  getValuesFilter(event){\r\n    let filters: Array<filterObject2> = new Array<filterObject2>();\r\n    event.forEach((element, i) => {\r\n      let model: filterObject2 = new filterObject2();\r\n      model.id = element.id;\r\n      if(element.value == undefined)\r\n        model.value = \"\";\r\n      else\r\n        model.value = element.value;\r\n\r\n      filters.push(model);\r\n    });\r\n    \r\n    let map: string = \"{\";\r\n    filters.forEach(element => {\r\n       map = map + '\"' + element.id.toString() + '\":' + '\"' + element.value.toString() + '\"' + ','\r\n       map=map.replace(/ /g, \"_\");\r\n    });\r\n\r\n    map=map.substring(0,(map.length-1))\r\n    map=map + \"}\"\r\n    \r\n    var json = JSON.parse(map);\r\n    console.log(json);\r\n    \r\n    // this.saveFiltro = json;\r\n\r\n    this.userService.getDataFilter(json).subscribe((result)=>{\r\n      this.filas = result['data']['listUsersDto']\r\n      let cabecerasFilter = result['data']['config']     \r\n      \r\n      cabecerasFilter.forEach(element => {\r\n        if(element.isVisible){\r\n          this.cabeceraFilter.push(element.headerGrid)\r\n        }else{\r\n          this.deleteReference.push(element.headerGrid)  \r\n        }\r\n      });\r\n      this.deleteDataFilter();\r\n    })\r\n  }\r\n\r\n  deleteProperty(property){\r\n    for(let i=0;i<this.filas.length;i++){\r\n      if(Reflect.has(this.filas[i], property)){\r\n        delete this.filas[i][property];        \r\n      }\r\n    }\r\n  }\r\n\r\n  getDataForList(event:any, id?){\r\n    let $_id = (event == null || event == undefined) ? id : event.id ;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {return false};\r\n    this.router.onSameUrlNavigation = 'reload';\r\n    this.router.navigateByUrl('/home/administracion/usuarios/usuario/'+$_id);\r\n    // this.route.navigate(['/home/administracion/usuarios/usuario/'+$_id]).then((res)=>{\r\n    //   window.location.reload();\r\n    // })\r\n  }\r\n\r\n  getCheckBoxData(event){\r\n    console.log(event);\r\n    this.dataReference.length = 0;\r\n    this.dataReference = event;\r\n  }\r\n\r\n  viewUser(){\r\n    if(this.dataReference.length == 1){\r\n      this.getDataForList(null, this.dataReference[0].id)\r\n    }\r\n  }\r\n\r\n  getEventIcon(event:Privilegios){\r\n    switch(event.idprivilegio){\r\n      case 103: this.viewUser();\r\n    }\r\n  }\r\n}\r\n","<!--\r\n<app-filter [idFilter]=idFilter [filter]=filterList (getValues)=getValuesFilter($event)>\r\n</app-filter>\r\n-->\r\n<app-table-component [tableFor]=\"'users'\" [th_rows]=\"cabecera\" [setDataUsers]=\"data\" [paginado]=\"paginado\" (emitData)=\"getDataForList($event)\" (emitArrayData)=\"getCheckBoxData($event)\" (emitEventData)=\"getEventIcon($event)\">\r\n</app-table-component>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>","<div class=\"accordion mt-4\" id=\"accordionExample\">\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                {{nameComponent}}\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <form [formGroup]=\"formularioGeneral\">\r\n                <div class=\"accordion-body\">\r\n                    <div class=\"panel\">\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Usuario</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"Usuario\" formControlName=\"userName\" [ngClass]=\"{ 'is-invalid': (getFormControl('userName').touched || getFormControl('userName').dirty) && getFormControl('userName').invalid}\" readonly [attr.disabled]=\"true\">\r\n                            </div>\r\n\r\n                            <div *ngIf=\"(getFormControl('userName').touched || getFormControl('userName').dirty) && getFormControl('userName').invalid\" class=\"text-danger\">\r\n                                <div>\r\n                                    <small>*Campo requerido</small>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Nombre</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"Nombre\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': (getFormControl('name').touched ||  getFormControl('name').dirty) && getFormControl('name').invalid}\">\r\n                            </div>\r\n                            <div *ngIf=\"(getFormControl('name').touched ||  getFormControl('name').dirty) && getFormControl('name').invalid\" class=\"text-danger\">\r\n                                <div>\r\n                                    <small>*Campo requerido</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Apellido paterno</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"appaterno\" formControlName=\"firstLastName\" [ngClass]=\"{ 'is-invalid': (getFormControl('firstLastName').touched || getFormControl('firstLastName').dirty) && getFormControl('firstLastName').invalid}\">\r\n                            </div>\r\n                            <div *ngIf=\"(getFormControl('firstLastName').touched || getFormControl('firstLastName').dirty) && getFormControl('firstLastName').invalid\" class=\"text-danger\">\r\n                                <div>\r\n                                    <small>*Campo requerido</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Apellido materno</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"appaterno\" formControlName=\"secondLastName\" [ngClass]=\"{ 'is-invalid': (getFormControl('secondLastName').touched || getFormControl('secondLastName').dirty) && getFormControl('secondLastName').invalid}\">\r\n                            </div>\r\n                            <div *ngIf=\"(getFormControl('secondLastName').touched || getFormControl('secondLastName').dirty) && getFormControl('secondLastName').invalid\" class=\"text-danger\">\r\n                                <div>\r\n                                    <small>*Campo requerido</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Correo</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"email\" class=\"form-control\" id=\"correo\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': (getFormControl('email').touched ||  getFormControl('email').dirty) && getFormControl('email').invalid}\">\r\n                            </div>\r\n                            <div *ngIf=\"(getFormControl('email').touched ||  getFormControl('email').dirty) && getFormControl('email').invalid\" class=\"text-danger\">\r\n                                <div>\r\n                                    <small>*Campo requerido</small>\r\n                                </div>\r\n                                <div>\r\n                                    <small>*Formato no valido.</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mb-3 row\">\r\n                            <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Último acceso</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"correo\" formControlName=\"lastLoginDate\" [ngClass]=\"{ 'is-invalid': (getFormControl('lastLoginDate').touched ||  getFormControl('lastLoginDate').dirty) && getFormControl('lastLoginDate').invalid}\" [attr.disabled]=\"true\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\" mb-3 row \">\r\n                            <label for=\"inputPassword \" class=\"col-sm-2 col-form-label \">Estatus</label>\r\n                            <div class=\"col-sm-10 \">\r\n                                <div class=\"form-check form-switch\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"mySwitch\" name=\"darkmode\" formControlName=\"estatus\">\r\n                                    <label class=\"form-check-label\" for=\"mySwitch \"></label>\r\n                                </div>\r\n                                <!-- <input class=\"form-check-input \" type=\"checkbox \" id=\"mySwitch \" name=\"Activo \" value=\"yes \"  checked> -->\r\n                                <!-- <input type=\" form-control \" formControlName=\"status \"> -->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mb-3 row\" *ngIf=\"statusButton\">\r\n                            <div class=\"col-sm-10 m-2\">\r\n                                <button class=\"btn btn-primary\" (click)=\"guardar()\">{{nameBtn}}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { Privilegios, SessionUser } from 'src/app/models/login';\r\nimport { PrivilegiosServiceService } from 'src/app/service/privilegios-service.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { Util, Messages } from 'src/app/utilities/util';\r\n\r\n@Component({\r\n  selector: 'app-usuario',\r\n  templateUrl: './usuario.component.html',\r\n  styleUrls: ['./usuario.component.css']\r\n})\r\nexport class UsuarioComponent implements OnInit, AfterViewInit {\r\n  \r\n  private userData: SessionUser;\r\n  \r\n  @Input()\r\n  nameComponent: string;\r\n  \r\n  @Input()\r\n  set nameButton(val:string){\r\n    this.nameBtn = val;\r\n    this.statusButton = val.length > 0 \r\n  }\r\n  statusButton:boolean= false;\r\n  nameBtn:string = null;\r\n\r\n  @Input()\r\n  set user(val:SessionUser){\r\n\r\n    this.userData = val;\r\n    this.formularioGeneral = this.getFormularioGeneral(val);\r\n \r\n  }\r\n\r\n  disabledUserName=true;\r\n  arrPrivilegios :Array<Privilegios>;\r\n  \r\n  \r\n  statusPass=0\r\n  // nameComponent: string;\r\n  constructor(private _formB: FormBuilder,private userService:UserService,\r\n    private privilegiosService: PrivilegiosServiceService) {}\r\n  \r\n  ngAfterViewInit(): void {\r\n    // throw new Error('Method not implemented.');\r\n\r\n  }\r\n\r\n  public formularioGeneral = this._formB.group({\r\n    idUser: new FormControl(),\r\n    userName: new FormControl(),\r\n    name: new FormControl(),\r\n    firstLastName: new FormControl(),\r\n    secondLastName: new FormControl(),\r\n    email: new FormControl(),\r\n    estatus: new FormControl(),\r\n    lastLoginDate : new FormControl()\r\n  });\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  get user():SessionUser{\r\n    return this.userData;\r\n  }\r\n  getFormularioGeneral(sessionUser?: SessionUser) {\r\n    const dataUsuario = this._formB.group({\r\n      idUser: [sessionUser == null ? null : sessionUser.idUser, [Validators.nullValidator]],\r\n      userName: [sessionUser == null ? null : sessionUser.userName , [Validators.required]],\r\n      name: [sessionUser == null ? null : sessionUser.name, [Validators.required]],\r\n      firstLastName: [\r\n        sessionUser == null ? null : sessionUser.firstLastName,[Validators.required]\r\n      ],\r\n      secondLastName: [\r\n        sessionUser == null ? null : sessionUser.secondLastName,[Validators.nullValidator]\r\n      ],\r\n      email: [\r\n        sessionUser == null ? null : sessionUser.email,[Validators.email, Validators.required]\r\n      ],\r\n      lastLoginDate :[\r\n        sessionUser == null ? null : sessionUser.lastLogin,[Validators.nullValidator]\r\n      ],\r\n      estatus :[\r\n        sessionUser == null ? null : sessionUser.estatus ==\"Activo\" ? true : false,[Validators.nullValidator]\r\n      ],\r\n    });\r\n    return dataUsuario;\r\n  }\r\n\r\n  public getFormControl(controlName: string): AbstractControl {\r\n    return this.formularioGeneral.controls[controlName];\r\n  }\r\n\r\n\r\n  public guardar(){\r\n    console.log(this.formularioGeneral.value)\r\n    if(this.formularioGeneral.valid){\r\n      let util = new Util();\r\n      let msg = new Messages();\r\n      this.userService.upDateData(this.formularioGeneral.value).subscribe((response)=>{\r\n        let data = response['data']\r\n        this.getFormularioGeneral(data)\r\n        this.ngOnInit();\r\n        util.bottomStartOk(msg.MSG_EMERGENTE_TRANSACCION_OK)\r\n\r\n      },error =>{\r\n        util.bottomEndError(\"error\")\r\n      }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { SessionUser } from 'src/app/models/login';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { Util, Messages } from '../../../../utilities/util';\r\n\r\n@Component({\r\n  selector: 'app-restablecer-pass',\r\n  templateUrl: './restablecer-pass.component.html',\r\n  styleUrls: ['./restablecer-pass.component.css']\r\n})\r\nexport class RestablecerPassComponent implements OnInit {\r\n  private butonName:string = '';\r\n  private showBtn = false  \r\n  @Input()\r\n  nameComponent = null\r\n  userData: SessionUser;\r\n\r\n  @Input()\r\n  set nameButon(val:string){\r\n    \r\n    this.butonName = val;\r\n    if(this.butonName.length > 0 && this.butonName != null && this.butonName != undefined){\r\n      this.showBtn = true\r\n    }\r\n  }\r\n  public formulario = this._formB.group({\r\n    idUser : new FormControl(),\r\n    modificationDate : new FormControl(),\r\n    restablecer: new FormControl()\r\n  });\r\n\r\n  @Input()\r\n  set user(val:SessionUser){\r\n    console.log(val)\r\n    this.userData = val;\r\n    this.formulario = this.getFormularioGeneral(val);\r\n    this.formulario.get('restablecer').valueChanges.subscribe((value)=>{\r\n      console.log('====================================');\r\n      console.log(value);\r\n      console.log('====================================');\r\n      this._userService.putResetStatusPass(this.formulario.get('idUser').value, value).subscribe((response)=>{\r\n        let util = new Util();\r\n        let msg = new Messages();\r\n        util.bottomStartOk(msg.MSG_EMERGENTE_TRANSACCION_OK);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\r\n  \r\n  constructor(private _formB :FormBuilder, public _userService :UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getFormularioGeneral(sessionUser?: SessionUser) {\r\n    const dataUsuario = this._formB.group({\r\n      idUser:[sessionUser == null ? null : sessionUser.idUser],\r\n      modificationDate :[\r\n        sessionUser == null ? null : sessionUser.passModificationDate,[Validators.nullValidator],\r\n      ],\r\n      restablecer :[\r\n        sessionUser == null ? null : sessionUser.statusPass == 'Activo' ? true : false ,[Validators.nullValidator]\r\n      ]\r\n    });\r\n    return dataUsuario;\r\n  }\r\n\r\n  get getNameButon(){\r\n    return this.butonName\r\n  }\r\n\r\n  get showButon(){\r\n    return this.showBtn;\r\n  }\r\n\r\n}\r\n","<div class=\"accordion mt-4\" id=\"accordionDualist\">\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDualist\" aria-expanded=\"true\" aria-controls=\"collapseDualist\">\r\n                {{nameComponent}}\r\n            </button>\r\n        </h2>\r\n        <div id=\"collapseDualist\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionDualist\">\r\n            <div class=\"container\">\r\n                <div class=\"row mt-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form [formGroup]=\"formulario\">\r\n                            <div class=\"mb-3 row\">\r\n                                <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Actualizada el :</label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputPassword\" formControlName=\"modificationDate\" [attr.disabled]=\"true\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\" mb-3 row \">\r\n                                <label for=\"inputPassword \" class=\"col-sm-2 col-form-label\">{{getNameButon}} :</label>\r\n                                <div class=\"col-sm-10 \">\r\n                                    <div class=\"form-check form-switch\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"mySwitch\" name=\"darkmode\" formControlName=\"restablecer\">\r\n                                        <label class=\"form-check-label\" for=\"mySwitch\"></label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"mb-3 row\"*ngIf=\"showButon\">\r\n                                <label class=\"col-sm-2 col-form-label\"></label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" formControlName=\"modificationDate\">\r\n                                        <span class=\"slider\"></span>\r\n                                    </label>\r\n                                </div>\r\n                            </div> -->\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","<div class=\"accordion mt-4\" id=\"accordionDualistPerfil\">\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDualistPerfil\" aria-expanded=\"true\" aria-controls=\"collapseDualistPerfil\">\r\n            {{nameComponent}}\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseDualistPerfil\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionDualistPerfil\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8 mt-2\">\r\n                        <dual-list [sort]=\"keepSorted\" [source]=\"source\" [key]=\"key\" [display]=\"display\" [filter]=\"filter\" [(destination)]=\"confirmed\" height=\"265px\" [format]=\"format\" [disabled]=\"disabled\"></dual-list>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2 mt-3\" *ngIf=\"statusButton\">\r\n                        <button class=\"btn btn-primary\" (click)=\"guardar()\">{{getBtName}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { DualListComponent } from 'angular-dual-listbox';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { EditRole, SessionUser } from 'src/app/models/login';\r\nimport { forkJoin, merge, mergeMap } from 'rxjs';\r\nimport { Response } from 'src/app/models/response';\r\nimport { LoginService } from 'src/app/service/login.service';\r\nimport { Role } from '../../../../models/login';\r\nimport { Util, Messages } from 'src/app/utilities/util';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-perfiles',\r\n  templateUrl: './perfiles.component.html',\r\n  styleUrls: ['./perfiles.component.css']\r\n})\r\nexport class PerfilesComponent implements OnInit {\r\n\r\n  @Input()\r\n  idUser = null;\r\n  statusButton: boolean = false;\r\n\r\n  \r\n  @Input()\r\n  set nameBtn(val){\r\n    this.btnName = val\r\n    this.statusButton = val.length > 0 ?? false\r\n  }\r\n\r\n  get getBtName(){\r\n    return this.btnName\r\n  }\r\n\r\n  private btnName;\r\n  tab = 1;\r\n  keepSorted = true;\r\n  key: string;\r\n  display: string;\r\n  filter = true;\r\n  source: Array<any>;\r\n  confirmed: Array<any>;\r\n  userAdd = '';\r\n  disabled = false;\r\n\r\n  sourceLeft = true;\r\n  // format: any = DualListComponent.DEFAULT_FORMAT;\r\n\t\r\n  DEFAULT_FORMAT = { add: 'Agregar', remove: 'Remover', all: 'Seleccionar todos', \r\n  none: 'None', direction: DualListComponent.LTR, draggable: true };\r\n  // format = this.DEFAULT_FORMAT;\r\n  format = { add: 'Agregar', remove: 'Remover', all: 'Seleccionar todos', none: 'Deseleccionar',\r\n  direction: DualListComponent.RTL, draggable: true, locale: 'da' };\r\n  \r\n  private sourceStations: Array<Role> = [];\r\n\r\n  private confirmedStations: Array<Role> = [];\r\n  nameComponent: any;\r\n  userData: SessionUser;\r\n\r\n  @Input()\r\n  set name(val){\r\n    this.nameComponent = val;\r\n    if(this.nameComponent){\r\n      \r\n    }\r\n  }\r\n\r\n  private stations: Array<Role> = [];\r\n\r\n  constructor( private userService:UserService, private loginService: LoginService, private ref: ChangeDetectorRef){}\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    forkJoin(\r\n      this.userService.getById<Response<SessionUser>>(this.idUser),\r\n      this.loginService.getPerfiles<Response<Array<Role>>>()\r\n      ).subscribe( ([user, roles]) =>{\r\n        console.log(user);\r\n        console.log(roles);\r\n        this.sourceStations = roles.data;\r\n        if(user.data.listRoles){\r\n          this.confirmedStations = user.data.listRoles;\r\n        }\r\n        this.useStations();\r\n    })    \r\n    this.userService.getById<Response<SessionUser>>(this.idUser).subscribe((response)=>{\r\n      console.log(response)\r\n      this.userData = response['data'];\r\n    })\r\n  }\r\n\r\n  private useStations() {\r\n    this.key = 'idRole';\r\n    this.display = 'role'; // [ 'idRole', 'role' ];\r\n    this.keepSorted = true;\r\n    this.source = this.sourceStations; // son los roles disponibles\r\n    this.confirmed = this.confirmedStations; // son los que seran removidos\r\n  }\r\n\r\n\r\n\r\n  guardar(){\r\n    let temp:Array<Role> = [...this.source]\r\n    let temp2:Array<Role> = [...this.confirmed];\r\n    let _$ = new EditRole();\r\n    let arr = []\r\n    for(let i = 0; i < temp.length; i ++){\r\n      let boo = false;\r\n      for(let j = 0 ; j < temp2.length; j++){\r\n        if(temp[i] === temp[j]){\r\n          boo = true\r\n          break;\r\n        }\r\n      }\r\n      if(boo == false){\r\n        arr.push(temp[i])\r\n      }\r\n      _$.agregar = temp2;\r\n      _$.remover = arr;\r\n      _$.idUser = this.idUser;\r\n    }\r\n    this.loginService.putPerfiles(_$).subscribe((response)=>{\r\n      let util = new Util();\r\n      let msg = new Messages();\r\n      util.bottomStartOk(msg.MSG_EMERGENTE_TRANSACCION_OK);\r\n    });\r\n  \r\n    console.log(arr);\r\n    \r\n\r\n    \r\n  }\r\n\r\n  filterBtn() {\r\n    return (this.filter ? 'Hide Filter' : 'Show Filter');\r\n  }\r\n\r\n  doDisable() {\r\n    this.disabled = !this.disabled;\r\n  }\r\n\r\n  disableBtn() {\r\n    return (this.disabled ? 'Enable' : 'Disabled');\r\n  }\r\n\r\n  swapDirection() {\r\n    this.sourceLeft = !this.sourceLeft;\r\n    this.format.direction = this.sourceLeft ? DualListComponent.LTR : DualListComponent.RTL;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"isVisible\">\r\n    <app-usuario [user]=\"userData\" [nameComponent]=\"nameComponent\" [nameButton]=\"nameButton\"></app-usuario>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"this.restablecerPassComp\">\r\n    <app-restablecer-pass [nameComponent]=\"contrasenaComponent\" [nameButon]=\"butonContranseName\" [user]=\"data\"></app-restablecer-pass>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"showPefilesComponent\">\r\n    <app-perfiles [name]=\"name\" [idUser]=\"this.referenceNumber\" [nameBtn]=\"nameBtnPerfil\"></app-perfiles>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { SessionUser } from 'src/app/models/login';\r\nimport { PrivilegiosServiceService } from 'src/app/service/privilegios-service.service';\r\nimport { Response } from 'src/app/models/response';\r\nimport { Privilegios } from '../../../../models/login';\r\nimport { isEmpty } from 'rxjs';\r\n@Component({\r\n  selector: 'app-vista-usuario',\r\n  templateUrl: './vista-usuario.component.html',\r\n  styleUrls: ['./vista-usuario.component.css']\r\n})\r\nexport class VistaUsuarioComponent implements OnInit {\r\n  statusGenerales = 1\r\n  id= 0;\r\n  referenceNumber: any;\r\n  userData:SessionUser = null;\r\n  isVisible\r\n  nameComponent: string;\r\n  nameButton: string;\r\n  data:SessionUser=null;\r\n\r\n  contrasenaComponent:string = '';\r\n  butonContranseName:string = '';\r\n  pass;\r\n  restablecerPassComp: Privilegios;\r\n  perfilesComp: Privilegios = null;\r\n  name: string;\r\n  nameBtnPerfil: string='';\r\n  showPefilesComponent: boolean = false;\r\n\r\n  constructor(private router: Router,private route: ActivatedRoute, private userService:UserService,\r\n    private privilegiosService : PrivilegiosServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.referenceNumber = params.id\r\n      this.userService.getById<Response<SessionUser>>(params.id).subscribe((response)=>{\r\n        console.log(response)\r\n        this.userData = response['data'];\r\n        this.data = response['data']\r\n        this.userData.userName = response.data.perfil;\r\n      })\r\n    })\r\n\r\n    setTimeout(()=>{\r\n      console.log(this.privilegiosService.getAllPrivilegiosArr())\r\n      let temp =[...this.privilegiosService.getAllPrivilegiosArr()]\r\n      let privilegioGeneral = new Privilegios(this.privilegiosService.searchTree(temp[1], 109))\r\n      this.isVisible = privilegioGeneral.status\r\n      this.nameComponent = privilegioGeneral.etiqueta\r\n      let infoHijos = new Privilegios(this.privilegiosService.searchTree(temp[1], 110))\r\n      this.nameButton = infoHijos.etiqueta     \r\n     \r\n      this.restablecerPassComp = new Privilegios(this.privilegiosService.searchTree(temp[1], 112))  \r\n      this.contrasenaComponent =  new Privilegios(this.privilegiosService.searchTree(temp[1], 112)).etiqueta\r\n      this.butonContranseName = new Privilegios(this.privilegiosService.searchTree(temp[1], 113)).etiqueta\r\n      this.perfilesComp =  new Privilegios(this.privilegiosService.searchTree(temp[1], 150))  \r\n      this.showPefilesComponent = Object.keys(this.perfilesComp).length > 0\r\n      this.name = this.perfilesComp.etiqueta\r\n      this.nameBtnPerfil = new Privilegios(this.privilegiosService.searchTree(temp[1], 151)).etiqueta\r\n    \r\n    \r\n      \r\n    },5000)\r\n  \r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { filterObject, filterObject2 } from 'src/app/models/filterObject';\r\nimport { RoleBaseAuthorization } from 'src/app/models/login';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.css']\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n\r\n\r\n  constructor() { }\r\n  \r\n  ngOnInit(): void {\r\n  \r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div>\r\n        <main>\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsuariosListComponent } from './usuarios/usuarios-list/usuarios-list.component';\r\nimport { AuthGuardGuard } from 'src/app/utilities/auth-guard.guard';\r\nimport { RoleBaseAuthorization } from '../../models/login';\r\nimport { PerfilComponent } from '../perfil/perfil.component';\r\nimport { VistaUsuarioComponent } from './usuarios/vista-usuario/vista-usuario.component';\r\nimport { UsuarioComponent } from './usuarios/usuario/usuario.component';\r\nimport { UsuariosComponent } from './usuarios.component';\r\nimport { PrivilegioGuardGuard } from 'src/app/utilities/privilegio-guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component : UsuariosComponent,\r\n    children:[\r\n      {path:'usuario/:id', component: VistaUsuarioComponent, \r\n      canActivate:[AuthGuardGuard, PrivilegioGuardGuard],\r\n      data:{\r\n        breadcrumb:\"Usuario\",\r\n        privilegio:\"108\",\r\n        roles: [\r\n          RoleBaseAuthorization.ADMIN,\r\n          RoleBaseAuthorization.COORDINADOR,\r\n          RoleBaseAuthorization.EJECUTIVO_PROYECTOS,\r\n        ]\r\n      }},\r\n      {path:'', component: UsuariosListComponent}\r\n    ]\r\n  },\r\n  // {path:'' , redirectTo:\"/\",pathMatch:\"full\"}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsuariosRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\r\nimport { UsuariosComponent } from './usuarios.component';\r\nimport { UsuariosListComponent } from './usuarios/usuarios-list/usuarios-list.component';\r\nimport { ShareModule } from '../../share-modules/share-modules.module';\r\nimport { AppRoutingModule } from '../../app-routing.module';\r\nimport { VistaUsuarioComponent } from './usuarios/vista-usuario/vista-usuario.component';\r\nimport { PerfilModule } from '../perfil/perfil.module';\r\nimport { UsuarioComponent } from './usuarios/usuario/usuario.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RestablecerPassComponent } from './usuarios/restablecer-pass/restablecer-pass.component';\r\nimport { PerfilesComponent } from './usuarios/perfiles/perfiles.component';\r\nimport { AngularDualListBoxModule } from 'angular-dual-listbox';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsuariosComponent,\r\n    UsuariosListComponent,\r\n    VistaUsuarioComponent,\r\n    UsuarioComponent,\r\n    RestablecerPassComponent,\r\n    PerfilesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    UsuariosRoutingModule,\r\n    ShareModule,\r\n    PerfilModule,\r\n    AngularDualListBoxModule  \r\n  ]\r\n})\r\nexport class UsuariosModule { }\r\n"],"x_google_ignoreList":[]}